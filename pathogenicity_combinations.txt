function computeClassification(){
      const counts = {PVS:0,PS:0,PM:0,PP:0,BA:0,BS:0,BP:0};
      Object.keys(codeElements).forEach(code=>{
        const e = inst(code);
        if(e.checkbox.checked){
          const strength = getEvidenceStrength(code, e.select.value);
          if(counts.hasOwnProperty(strength)) counts[strength] += 1;
        }
      });

      const pathSum = counts.PVS + counts.PS + counts.PM + counts.PP;
      const benignSum = counts.BA + counts.BS + counts.BP;

      if(benignSum > 0 && pathSum > 0) return setClassification('VUS','Contradictory pathogenic and benign evidence selected.');
      if(counts.PVS >=1 && counts.PS >=1) return setClassification('Pathogenic','Rule: PVS + PS');
      if(counts.PVS >=1 && counts.PM >=2) return setClassification('Pathogenic','Rule: PVS + 2xPM');
      if(counts.PVS >=1 && counts.PM >=1 && counts.PP >=1) return setClassification('Pathogenic','Rule: PVS + PM + PP');
      if(counts.PVS >=1 && counts.PP >=2) return setClassification('Pathogenic','Rule: PVS + 2xPP');
      if(counts.PS >=2) return setClassification('Pathogenic','Rule: 2xPS');
      if(counts.PS >=1 && counts.PM >=3) return setClassification('Pathogenic','Rule: PS + 3xPM');
      if(counts.PS >=1 && counts.PM >=2 && counts.PP >=2) return setClassification('Pathogenic','Rule: PS + 2xPM + 2xPP');
      if(counts.PS >=1 && counts.PM >=1 && counts.PP >=4) return setClassification('Pathogenic','Rule: PS + PM + 4xPP');

      if(counts.PVS >=1 && counts.PM >=1) return setClassification('Likely pathogenic','Rule: PVS + PM');
      if(counts.PS >=1 && counts.PM >=1) return setClassification('Likely pathogenic','Rule: PS + PM');
      if(counts.PS >=1 && counts.PP >=2) return setClassification('Likely pathogenic','Rule: PS + 2xPP');
      if(counts.PM >=3) return setClassification('Likely pathogenic','Rule: 3xPM');
      if(counts.PM >=2 && counts.PP >=2) return setClassification('Likely pathogenic','Rule: 2xPM + 2xPP');
      if(counts.PM >=1 && counts.PP >=4) return setClassification('Likely pathogenic','Rule: PM + 4xPP');

      if(counts.BA >=1) return setClassification('Benign','Rule: BA (stand-alone)');
      if(counts.BS >=2) return setClassification('Benign','Rule: 2xBS');

      if(counts.BS >=1 && counts.BP >=1) return setClassification('Likely benign','Rule: BS + BP');
      if(counts.BP >=2) return setClassification('Likely benign','Rule: 2xBP');

      return setClassification('VUS','No definitive combination matched.');
    }
